[{"title":"GO-交替输出数字和字母","date":"2022-11-21T08:59:53.623Z","path":"2022/11/21/go-交替输出数字和字母/","text":"//12AB34CD56EF78GH910IJ1112KL1314MN1516OP1718QR1920ST2122UV2324WX2526YZ2728 第一种： 12345678910111213141516171819202122232425262728293031323334353637383940414243package mainimport ( &quot;fmt&quot; &quot;sync&quot;)var channel = make(chan bool, 1)func main() &#123; var wg sync.WaitGroup wg.Add(2) go func() &#123; defer wg.Done() for i := 1; i &lt; 29; i++ &#123; for &#123; if len(channel) == 0 &#123; break &#125; &#125; fmt.Print(i) if i%2 == 0 &#123; channel &lt;- true &#125; &#125; &#125;() go func() &#123; defer wg.Done() for i := &#x27;A&#x27;; i &lt;= &#x27;Z&#x27;; i++ &#123; for &#123; if len(channel) == 1 &#123; break &#125; &#125; fmt.Print(string(i)) if i%2 == 0 &#123; &lt;-channel &#125; &#125; &#125;() wg.Wait()&#125; 第二种： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647package mainimport ( &quot;fmt&quot; &quot;sync&quot;)func main() &#123; letter, number := make(chan bool), make(chan bool) wait := sync.WaitGroup&#123;&#125; go func() &#123; i := 1 for &#123; select &#123; case &lt;-number: fmt.Print(i) i++ fmt.Print(i) i++ letter &lt;- true &#125; &#125; &#125;() wait.Add(1) go func(wait *sync.WaitGroup) &#123; i := &#x27;A&#x27; for &#123; select &#123; case &lt;-letter: if i &gt;= &#x27;Z&#x27; &#123; wait.Done() return &#125; fmt.Print(string(i)) i++ fmt.Print(string(i)) i++ number &lt;- true &#125; &#125; &#125;(&amp;wait) number &lt;- true wait.Wait()&#125;","tags":[]},{"title":"随记","date":"2022-11-17T02:15:52.222Z","path":"2022/11/17/作为意志和表象的世界01/","text":"我们既已在无知无识的自然界看到大自然的内在本质就是不断的追求挣扎，无目标无休止的追求挣扎；那么，在我们考察动物和人的时候，这就更明显地出现在我们眼前了。欲求和挣扎是人的全部本质，完全可以和不能解除的口渴相比拟。但是一切欲求的基地却是需要，缺陷，也就是痛苦；所以，人从来就是痛苦的，由于他的本质就是落在痛苦的手心里的。如果相反，人因为他易于获得的满足随即消除了他的可欲之物而缺少了欲求的对象，那么，可怕的空虚和无聊就会袭击他，即是说人的存在和生存本身就会成为他不可忍受的重负。所以人生是在痛苦和无聊之间像钟摆一样的来回摆动着；事实上痛苦和无聊两者也就是人生的两种最后成分。下面这一事实很奇特地，也必然地道破这一点：在人们把一切痛苦和折磨都认为是地狱之后，给天堂留下来的除闲着无聊之外就再也没有什么了。","tags":[]},{"title":"EVA01","date":"2022-10-20T08:17:11.043Z","path":"2022/10/20/EVANGELION/","text":"123456789101112131415161718192021222324252627package mainimport ( &quot;fmt&quot; &quot;sync&quot; &quot;time&quot;)//睡眠排序func main() &#123; b := [7]int&#123;1, 7, 3, 8, 5, 3, 4&#125; var wg sync.WaitGroup for _, v := range b &#123; wg.Add(1) v := v go func() &#123; defer wg.Done() output(v) &#125;() &#125; wg.Wait()&#125;func output(v int) &#123; time.Sleep(time.Duration(v) * time.Second) fmt.Println(v)&#125;","tags":[]},{"title":"杂谈测试文","date":"2022-10-20T08:17:11.043Z","path":"2022/10/20/杂谈文件名/","text":"测试图片","tags":[]},{"title":"睡眠排序 go-sleep","date":"2022-10-20T02:07:55.224Z","path":"2022/10/20/go-sleep/","text":"时间复杂度O(1)的排序 12345678910111213141516171819//睡眠排序func main() &#123; b := [7]int&#123;1, 7, 3, 8, 5, 3, 4&#125; var wg sync.WaitGroup for _, v := range b &#123; wg.Add(1) v := v go func() &#123; defer wg.Done() output(v) &#125;() &#125; wg.Wait()&#125;func output(v int) &#123; time.Sleep(time.Duration(v) * time.Second) fmt.Println(v)&#125;","tags":[]}]